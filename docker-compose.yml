version: '3.0'

services:
  # =============================== Mongo =====================================
  # mongo:
  #   image: mongo:3.2
  #   restart: unless-stopped
  #   volumes:
  #     - ./data/db:/data/db
  #   command: mongod --smallfiles --oplogSize 128
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    hostname: mongo
    volumes:
      - "telegram_db"
    environment:
      MONGO_HOST: 'mongo'
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: "1234"
    expose:
     - "27017"

  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongo
    links:
      - mongo
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: "1234"

  # =============================== Coach =====================================  
  coach:
    container_name: coach
    image: lappis/coach:boilerplate
    command: sh -c "cp -r /src_models/*"

  # ================================= Bot =====================================
  bot:
    image: lappis/bot:boilerplate
    container_name: rasaShell
    build:
      context: .
      dockerfile: ./docker/bot.Dockerfile
    restart: unless-stopped
    ports:
      - 5002:5002
    depends_on:
      - actions
    volumes:
      - ./Rasa/bot:/bot

  # ============================ Telegram Bot =================================
  bot_telegram:
      container_name: bot_telegram
      build:
        context: .
        dockerfile: ./docker/bot.Dockerfile
      env_file:
        - docker/bot-telegram.env
      ports:
        - 5001:5001
      depends_on:
        - actions
      volumes:
        - ./Rasa/bot:/bot
      command: sh -c "make run-telegram"

  # ================================= Actions =================================
  actions:
    container_name: actions
    build:
      context: .
      dockerfile: ./docker/actions.Dockerfile
    ports:
      - 5055:5055
    depends_on:
      - mongo
      - mongo-express
    volumes:
      - ./Rasa/bot/actions:/bot/actions
      - ./Rasa/bot/Makefile:/bot/Makefile
    command: sh -c "make run-actions"

volumes:
  notebook_models:
  esbackup:
  esdata:
    driver: local